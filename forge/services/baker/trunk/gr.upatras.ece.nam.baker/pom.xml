<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>gr.upatras.ece.nam</groupId>
	<artifactId>gr.upatras.ece.nam.baker</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>Simple CXF JAX-RS webapp service using spring configuration</name>
	<description>Simple CXF JAX-RS webapp service using spring configuration</description>
	<properties>
		<jackson.version>1.8.6</jackson.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-client</artifactId>
			<version>3.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxrs</artifactId>
			<version>3.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-jaxrs</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>3.2.6.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
	</dependencies>


	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>1.7</source>
						<target>1.7</target>
					</configuration>
				</plugin>
				
			</plugins>
		</pluginManagement>
		<plugins>
			
			
		</plugins>
	</build>



	<profiles>
		<profile>
		<!-- Run profile for continuous running: 
				mvn clean -Pjetty.integration jetty:run 
				and access to http://127.0.0.1:13000/jaxrs-srvtest/hello/echo/SierraTangoNevadaxx 
				For jetty integration test: mvn clean -Pjetty.integration verify -->
			<id>jetty.integration</id>
			<build>
				<pluginManagement>
					<plugins>
						
						<plugin>
							<groupId>org.eclipse.jetty</groupId>
							<artifactId>jetty-maven-plugin</artifactId>
							<version>9.2.1.v20140609</version>
							<configuration>
								<!-- Uncomment this to run it with jetty:run and secure port 8443 
									<jettyXml>${basedir}/src/test/resources/jetty.xml,${basedir}/src/test/resources/jetty-ssl.xml,${basedir}/src/test/resources/jetty-https.xml</jettyXml> -->

								<httpConnector>
									<port>13000</port>
								</httpConnector>
								<scanIntervalSeconds>2</scanIntervalSeconds>
								<webApp>
									<contextPath>/jaxrs-service</contextPath>
								</webApp>
							</configuration>
							<executions>
								<execution>
									<id>run-jetty</id>
									<goals>
										<goal>run</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.5</version>
						<executions>
							<execution>
								<id>reserve-network-port</id>
								<goals>
									<goal>reserve-network-port</goal>
								</goals>
								<phase>process-test-resources</phase>
								<configuration>
									<portNames>
										<portName>test.server.port</portName>
									</portNames>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.eclipse.jetty</groupId>
						<artifactId>jetty-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>start-jetty</id>
								<goals>
									<goal>run-war</goal>
								</goals>
								<phase>pre-integration-test</phase>
								<configuration>
									<httpConnector>
										<port>${test.server.port}</port>
									</httpConnector>
									<stopPort>9999</stopPort>
									<stopKey>STOP</stopKey>
									<daemon>true</daemon>
								</configuration>
							</execution>
							<execution>
								<id>stop-jetty</id>
								<goals>
									<goal>stop</goal>
								</goals>
								<phase>post-integration-test</phase>
								<configuration>
									<stopKey>STOP</stopKey>
									<stopPort>9999</stopPort>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>2.8.1</version>
						<executions>
							<execution>
								<id>integration-test</id>
								<goals>
									<goal>integration-test</goal>
								</goals>
								<configuration>
									<systemPropertyVariables>
										<service.url>http://localhost:${test.server.port}/jaxrs-srvtest</service.url>
									</systemPropertyVariables>
								</configuration>
							</execution>
							<execution>
								<id>verify</id>
								<goals>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>


		<profile>
			<!-- Run profile for continuous running: mvn clean -Ptomcat.integration	org.apache.tomcat.maven:tomcat7-maven-plugin:run 
				and access to http://127.0.0.1:13000/jaxrs-service/hello/echo/SierraTangoNevadaxx 
				For tomcat integration test: mvn clean -Ptomcat.integration verify -->
			<id>tomcat.integration</id>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.tomcat.maven</groupId>
							<artifactId>tomcat7-maven-plugin</artifactId>
							<version>2.0</version>
							<executions>
								<execution>
									<id>default-cli</id>
									<goals>
										<goal>run</goal>
									</goals>
									<configuration>
										<port>13000</port>
										<path>/jaxrs-service</path>
										<useSeparateTomcatClassLoader>true</useSeparateTomcatClassLoader>
									</configuration>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.5</version>
						<executions>
							<execution>
								<id>reserve-network-port</id>
								<goals>
									<goal>reserve-network-port</goal>
								</goals>
								<phase>process-test-resources</phase>
								<configuration>
									<portNames>
										<portName>test.server.port</portName>
									</portNames>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.tomcat.maven</groupId>
						<artifactId>tomcat7-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>start-tomcat</id>
								<goals>
									<goal>run-war</goal>
								</goals>
								<phase>pre-integration-test</phase>
								<configuration>
									<port>${test.server.port}</port>
									<path>/jaxrs-srvtest</path>
									<fork>true</fork>
									<useSeparateTomcatClassLoader>true</useSeparateTomcatClassLoader>
								</configuration>
							</execution>
							<execution>
								<id>stop-tomcat</id>
								<goals>
									<goal>shutdown</goal>
								</goals>
								<phase>post-integration-test</phase>
								<configuration>
									<path>/jaxrs-service</path>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>2.8.1</version>
						<executions>
							<execution>
								<id>integration-test</id>
								<goals>
									<goal>integration-test</goal>
								</goals>
								<configuration>
									<systemPropertyVariables>
										<service.url>http://localhost:${test.server.port}/jaxrs-srvtest</service.url>
									</systemPropertyVariables>
								</configuration>
							</execution>
							<execution>
								<id>verify</id>
								<goals>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>


		<profile>
			<id>cargo.run</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<version>1.4.8</version>

						<configuration>
							<container>
								<containerId>jetty9x</containerId>
								<zipUrlInstaller>
									<url>http://repo1.maven.org/maven2/org/eclipse/jetty/jetty-distribution/9.2.1.v20140609/jetty-distribution-9.2.1.v20140609.tar.gz</url>
								</zipUrlInstaller>
							</container>
							<configuration>
								<home>${project.build.directory}/jetty</home>
								<properties>
									<cargo.servlet.port>8080</cargo.servlet.port>
								</properties>
								<configfiles>

								</configfiles>
								<files>

								</files>
							</configuration>
							<deployables>
								<deployable>
									<location>../gr.upatras.ece.nam.baker-0.0.1-SNAPSHOT.war</location>
									<type>war</type>
									<properties>
										<context>/baker</context>
									</properties>
								</deployable>
							</deployables>
							<packager>
								<outputLocation>${project.build.directory}/jetty-packaged</outputLocation>
							</packager>
						</configuration>
						<executions>
							<execution>
								<id>start</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
								</goals>
							</execution>
							<execution>
								<id>stop</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
							<execution>
								<id>package</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>package</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
